-- DECLARE 4 VARIABLES. : P Q R S
-- USE BOTH INTEGER TYPES , FLOAT AND DOUBLE.
-- ASSIGN SOME VALUES TO ALL OF THEM.
-- DISPLAY THEM ALL IN ORIGINAL AND DECIMAL FORMAT.
-- ADD P AND Q
-- SUBTRACT P FROM Q
-- MULTIPLY Q AND R
-- DIVIDE R BY S
-- DISPLAY ALL OF THEM IN ORIGINAL AND DECIMAL FORMAT.

-- DECLARE
--     P BINARY_INTEGER;
--     Q INTEGER;
--     R BINARY_FLOAT;
--     S BINARY_DOUBLE;
-- BEGIN
--     P := 10;
--     Q := 5;
--     R := 15.5;
--     S := 20.5;
    
--     DBMS_OUTPUT.PUT_LINE('P: ' || TO_CHAR(P, '999.99') || ' = ' || P);
--     DBMS_OUTPUT.PUT_LINE('Q: ' || TO_CHAR(Q, '999.99') || ' = ' || Q);
--     DBMS_OUTPUT.PUT_LINE('R: ' || TO_CHAR(R, '999.99') || ' = ' || R);
--     DBMS_OUTPUT.PUT_LINE('S: ' || TO_CHAR(S, '999.99') || ' = ' || S);
-- 	DBMS_OUTPUT.PUT_LINE('P + Q = ' || (P+Q) || ' = ' || TO_CHAR((P+Q), '999.99'));
--     DBMS_OUTPUT.PUT_LINE('Q - P = ' || (Q-P) || ' = ' || TO_CHAR((Q-P), '999.99'));
--     DBMS_OUTPUT.PUT_LINE('Q * R = ' || Q*R || ' = ' || TO_CHAR(Q*R, '999999.99'));
--     DBMS_OUTPUT.PUT_LINE('R / S = ' || R/S || ' = ' || TO_CHAR(R/S, '999999.99'));
-- END;
-- /

-- DECLARE VARIABLES TO STORE : TIMESTAMP , DAY TO SECOND AND YEAR TO MONTH INTERVAL TYPE VALUES
-- ASK USER FOR ALL VALUES.
-- DISPLAY TIMESTAMP , TIMESTAMP + DAY TO SECOND , TIMESTAMP - YEAR TO MONTH AND 
-- TIMESTAMP - DAY TO SECOND + YEAR TO MONTH

-- DECLARE
--     TS TIMESTAMP;
--     IDTS INTERVAL DAY TO SECOND;
--     IYTM INTERVAL YEAR TO MONTH;
-- BEGIN
--     TS := LOCALTIMESTAMP;
-- 	IDTS := TO_DSINTERVAL('&INTERVAL_DAY_TO_SECOND');
-- 	IYTM := TO_YMINTERVAL('&INTERVAL_YEAR_TO_MONTH');
--     DBMS_OUTPUT.PUT_LINE('TIMESTAMP : ' || TS);
-- 	DBMS_OUTPUT.PUT_LINE('TS + IDTS : ' || (TS+IDTS));
-- 	DBMS_OUTPUT.PUT_LINE('TS + IYTM : ' || (TS+IYTM));
-- 	DBMS_OUTPUT.PUT_LINE('TS - IDTS + IYTM : ' || (TS-IDTS+IYTM));
-- END;
-- /

-- REM 3 LEVEL NESTED BLOCKS
-- REM X , Y
-- REM B1 : X BINARY_INTEGER , Y PLS_INTEGER
-- REM B2 : X BINARY_FLOAT , Y BINARY_DOUBLE
-- REM B3 : X TIMESTAMP , Y INVERVAL DAY TO SECOND
-- REM B3 : B1.X + B2.X
-- REM B3 : B1.Y + B2.Y
-- REM B3 : B3.X + B3.Y
-- REM DISPLAY ALL NUMERICAL VALUES IN USER DEFINED FORMATS NOT EXPONENT FORMAT

<<B1>>DECLARE 
	X BINARY_INTEGER;
	Y PLS_INTEGER;
BEGIN
    X := 10;
	Y := 20;
	<<B2>>DECLARE
		X BINARY_FLOAT;
		Y BINARY_DOUBLE;
			BEGIN
                X := 10.5;
				Y := 12.2;		
				<<B3>>DECLARE
					X TIMESTAMP;
					Y INTERVAL DAY TO SECOND;
					BEGIN
						X := LOCALTIMESTAMP;
						Y := TO_DSINTERVAL('10 12:30:30.0');
						DBMS_OUTPUT.PUT_LINE('B1.X + B2.X = ' || TO_CHAR((B1.X + B2.X),'999999.99'));
						DBMS_OUTPUT.PUT_LINE('B1.Y + B2.Y = ' || TO_CHAR((B1.Y + B2.Y),'999999.99'));
						DBMS_OUTPUT.PUT_LINE('B3.X + B3.Y = ' || (B3.X + B3.Y));
					END;
			END;
END;
/