-- EXAMPLE OF USING RAISE WITH USER DEFINED EXCEPTION FOR BUSINESS RULE ERROR SITUATION

DECLARE
	V_EMPNO MPSEMP.EMPNO%TYPE := &ENO; --  7788   7890
	INCR_PERC NUMBER(4,2) := &INCR_PERCENT;  --   ORACLE STORAGE RANGE FOR THE VARIABLE IS -99.99 TO +99.99
--                  -99.99 TO +99.99           	
--                  20        50
	E_INVALID_INCR_PERCENT EXCEPTION;
BEGIN
	IF INCR_PERC BETWEEN 20 AND 50 THEN -- BUSINESS RULE ERROR CONDITION CHECKING
		UPDATE MPSEMP SET SAL = SAL * (1 + INCR_PERC / 100)
		WHERE EMPNO = V_EMPNO;
		DBMS_OUTPUT.PUT_LINE(SQL%ROWCOUNT || ' ROW(S) UPDATED.');
		IF SQL%ROWCOUNT = 0 THEN
			RAISE_APPLICATION_ERROR(-20777,'SUCH EMPLOYEE DOES NOT EXIST.'); -- THIS WILL ONLY GET EXECUTED IF WHEN OTHERS IS MISSING.
		END IF;
	ELSE
		RAISE E_INVALID_INCR_PERCENT;  -- EXPLICITLY RAISING EXCEPTION, TO JUMP EXECUTION CONTROL TO EXCEPTION HANDLING PART
	END IF;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('HI');
	WHEN E_INVALID_INCR_PERCENT THEN
		DBMS_OUTPUT.PUT_LINE('HI, RISE % CAN''T BE OUT OF LIMIT : 20-50.'); 
		RAISE_APPLICATION_ERROR(-20999,'RISE % CAN''T BE OUTSIDE RANGE 20-50. -- E_INVALID_INCR_PERCENT');
		DBMS_OUTPUT.PUT_LINE('BYE!');
/*	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('OTHERS');   */
END;
/