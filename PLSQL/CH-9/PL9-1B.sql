-- PACKAGE SYNTAX IS DIFFERENT FROM SUB-PROGRAMS. IT DOESN'T HAVE 3 PARTS LIKE DECLARATION , BODY AND EXCEPTION HANDLING.
-- EXECUTE COMM_PACKAGE.RESET_COMM(7788,500)
-- EXECUTE DBMS_OUTPUT.PUT_LINE('HI');
CREATE OR REPLACE PACKAGE BODY COMM_PACKAGE
AS
	Y NUMBER;   -- PRIVATE VARIABLE
--	G_MAX_COMM NUMBER; -- WE CAN'T USE IDENTICAL VARIABLE NAME AS PUBLIC VARIABLE
	P_MIN_COMM NUMBER;  -- PRIVATE VARIABLE
--	<<LABEL>> NOT ALLOWED
	FUNCTION VALIDATE_COMM (P_COMM IN NUMBER)  -- PRIVATE FUNCTION
	RETURN BOOLEAN
	IS
--	WE CAN DECLARE SAME NAME LOCAL VARIABLE AS PUBLIC VARIABLE.
--	SHOW THE EXAMPLES TWO TIMES WITH AND WITHOUT LOCAL DECLARATION OF THE BELOW VARIABLE.
	G_MAX_COMM NUMBER := 100;  -- LOCAL VARIABLE
--	Z NUMBER;   -- LOCAL VARIABLE
	BEGIN
		DBMS_OUTPUT.PUT_LINE(G_MAX_COMM || 'LOCAL' || CHR(10));
		DBMS_OUTPUT.PUT_LINE(COMM_PACKAGE.G_MAX_COMM || 'INITIALIZED VALUE OF PUBLIC VARIABLE'|| CHR(10));
		SELECT /* NVL( */ MIN(COMM) /* ,0) */ , MAX(COMM) 
		INTO P_MIN_COMM , COMM_PACKAGE.G_MAX_COMM
		FROM MPSEMP;
/*		WHEN WE USE SAME VARIABLE NAME FOR PUBLIC AND LOCAL AND IF WE REFER
		VARIABLE NAME WITHOUT QUALIFICATION IT WILL REFER THE LOCAL VARIABLE
		BUT WHEN WE QUALIFY IT WITH PACKAGE NAME IT WILL REFER PUBLIC VARIABLE.   */
		DBMS_OUTPUT.PUT_LINE(G_MAX_COMM || 'LOCAL'); -- HERE LOCAL VARIABLE WILL BE PREFERRED
		DBMS_OUTPUT.PUT_LINE(COMM_PACKAGE.G_MAX_COMM||'PUBLIC'|| CHR(10));
		DBMS_OUTPUT.PUT_LINE('P_MIN_COMM' || P_MIN_COMM || CHR(10));
		IF P_COMM BETWEEN P_MIN_COMM AND COMM_PACKAGE.G_MAX_COMM THEN 
			RETURN(TRUE);
		ELSE
			RETURN(FALSE);
		END IF;
	END VALIDATE_COMM;
--  SQL> EXECUTE COMM_PACKAGE.RESET_COMM(7788,500)
--  SQL> CALL COMM_PACKAGE.RESET_COMM(7839,1000);
	PROCEDURE RESET_COMM (P_EMPNO MPSEMP.EMPNO%TYPE, P_COMM IN NUMBER)  -- PUBLIC PROCEDURE
	AS
		V_CURRENT_COMM MPSEMP.COMM%TYPE;  -- LOCAL DECLARATION
		P_MIN_COMM NUMBER := 99;  -- LOCAL VARIABLE DECLARATION + INITIALIZATION
	BEGIN
		SELECT NVL(COMM,0) INTO V_CURRENT_COMM FROM MPSEMP WHERE EMPNO = P_EMPNO;
		IF P_COMM > V_CURRENT_COMM THEN
			IF VALIDATE_COMM(P_COMM) THEN
				DOPL('MIN COMM : ' || COMM_PACKAGE.P_MIN_COMM);  -- PRIVATE VARIABLE
				DOPL('NEW COMM : ' || P_COMM);
				DOPL('MAX COMM : ' || G_MAX_COMM);   -- PUBLIC VARIABLE IS REFERRED HERE AS NO LOCAL DECLARATION WITH SAME NAME EXISTS. 
				UPDATE MPSEMP SET COMM = P_COMM WHERE EMPNO = P_EMPNO;
				DBMS_OUTPUT.PUT_LINE(G_MAX_COMM || 'PUBLIC VARIABLE FROM RESET COMM PROCEDURE.'|| CHR(10));
				DBMS_OUTPUT.PUT_LINE(P_MIN_COMM || 'LOCAL VARIABLE FROM RESET COMM PROCEDURE.'|| CHR(10));
				DBMS_OUTPUT.PUT_LINE(COMM_PACKAGE.P_MIN_COMM || 'PRIVATE VARIABLE FROM RESET COMM PROCEDURE.'|| CHR(10));
			ELSE
	--			DBMS_OUTPUT.PUT_LINE(G_MAX_COMM||'HELLO');
				RAISE_APPLICATION_ERROR(-20210, 'COMMISSION CAN NOT BE OUT SIDE COMMISSION RANGE.'|| COMM_PACKAGE.P_MIN_COMM || '-' || G_MAX_COMM|| CHR(10));
			END IF;
		ELSE
			--	DBMS_OUTPUT.PUT_LINE(G_MAX_COMM||'HELLO');
			RAISE_APPLICATION_ERROR(-20212, 'COMMISSION CAN NOT BE LESS THAN CURRENT COMMISSION '|| V_CURRENT_COMM|| CHR(10));
		END IF;
		DOPL('VALUE OF V1 PUBLIC VARIABLE DECLARED INSIDE GLOBAL_IDENTIFIERS PACKAGE : ' || GLOBAL_IDENTIFIERS.V1|| CHR(10)); -- A PUBLIC PACKAGE ITEM CAN BE REFERRED FROM ANY CALLING ENVIRONMENT.
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			DOPL('NO SUCH EMPLOYEE EXISTS IN TABLE, DISPLAYED FROM EXCEPTION PART.'|| CHR(10)); 
	END /* RESET_COMM */;

	-- PACKAGE BODY DOESN'T ALLOW EXCEPTION PART.
	/*	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			DOPL('NO SUCH EMPLOYEE EXISTS IN TABLE FROM EXCEPTION PART.');  */
END COMM_PACKAGE;
/