<<GP1>>BEGIN
    DBMS_OUTPUT.PUT_LINE('GP1 START' || CHR(10));
	<<P1>>DECLARE
    	NUM NUMBER;
    BEGIN
        DBMS_OUTPUT.PUT_LINE('P1 START' || CHR(10));
        NUM := 'ABC';
		<<C1>>DECLARE
    		FNAME EMPLOYEES.FIRST_NAME%TYPE;
    	BEGIN
            DBMS_OUTPUT.PUT_LINE('C1 START' || CHR(10));
    		SELECT FIRST_NAME INTO FNAME FROM EMPLOYEES;
    		EXCEPTION
        		WHEN TOO_MANY_ROWS THEN
        			DBMS_OUTPUT.PUT_LINE('C1 BLOCK MANY ROWS');
				WHEN OTHERS THEN
		            DBMS_OUTPUT.PUT_LINE('C1 BLOCK OTHERS IS EXECUTED');
    	END;
		EXCEPTION
	        WHEN TOO_MANY_ROWS THEN
     		   	DBMS_OUTPUT.PUT_LINE('P1 BLOCK MANY ROWS');
			WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR('-20001','INVALIDE TYPE');
    END;
	<<P2>>BEGIN
        DBMS_OUTPUT.PUT_LINE('P2 START' || CHR(10));
		<<C2>>DECLARE
        	NUM2 NUMBER := 'XYZ';
        BEGIN
            DBMS_OUTPUT.PUT_LINE('C2 START' || CHR(10));
        	EXCEPTION
		        WHEN TOO_MANY_ROWS THEN
        			DBMS_OUTPUT.PUT_LINE('C2 BLOCK MANY ROWS');
				WHEN OTHERS THEN
                    DBMS_OUTPUT.PUT_LINE('RA=20999: CHECK VARIABLE DATA TYPE AND IT''S VALUE');
					RAISE;
        END;
		EXCEPTION
	        WHEN TOO_MANY_ROWS THEN
     		   	DBMS_OUTPUT.PUT_LINE('P2 BLOCK MANY ROWS');
			WHEN OTHERS THEN
    	        DBMS_OUTPUT.PUT_LINE('P2 BLOCK OTHERS IS EXECUTED');
    END;
	EXCEPTION
        WHEN TOO_MANY_ROWS THEN
        	DBMS_OUTPUT.PUT_LINE('GP1 BLOCK MANY ROWS');
		WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('GP1 BLOCK OTHERS IS EXECUTED');
END;

-- TAKE GP1 BLOCK AS GRAND PARENT BLOCK.
-- TAKE P1 AND P2 AS PARENT BLOCKS.
-- TAKE C1 AS CHILD BLOCK OF P1 BLOCK AND C2 AS CHILD BLOCK OF P2 BLOCK.
-- WRITE TOO_MANY_ROWS AND OTHERS EXCEPTIONS IN EACH BLOCK.

-- IN C1 BLOCK (EXECUTABLE PART), WRITE SELECT STATEMENT WHICH MUST RETURN MULTIPLE FIRST_NAME. ERROR MUST BE DISPLAYED FROM 
-- INSIDE TOO_MANY_ROWS OF C1 BLOCK ONLY. IT SHOULD BE TERMINATED NORMALLY.
-- IN P1 BLOCK (EXECUTABLE PART), TRY TO ASSIGN ALPHANUMERICAL VALUE TO NUMBER TYPE VARIABLE. USE RAISE_APPLICATION_ERROR TO DISPLAY 
-- IT'S ERROR MESSAGE.

-- IN P1 BLOCK (OTHERS), TRY TO DISPLAY ERROR USING RAISE_APPLICATION_ERROR.

-- IN C2 BLOCK (DECLARATION PART), TRY TO INTIALIZE NUMBER TYPE VARIABLE WITH ALPHABETICAL VALUE. DISPLAY ERROR MESSAGE : ORA=20999: CHECK VARIABLE
-- DATA TYPE AND IT'S VALUE. IT SHOULD BE ABNORMALLY TERMINATED.

-- IN GP1 BLOCK (OTHERS) DISPLAY ERROR MESSAGE WITH DBMS_OUTPUT.PUT_LINE.