1 DISPLAY FIRST_NAME , DEPARTMENT_NAME
SELECT FIRST_NAME, DEPARTMENT_NAME FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID);

2 DISPLAY FIRST_NAME AND HIS/HER DEPARTMENTAL COLLEGUE NAME (REMOVE ALL TYPES OF DUPLICATIONS)
SELECT DISTINCT E1.FIRST_NAME, E2.FIRST_NAME COLLEAGUE
FROM EMPLOYEES E1
JOIN EMPLOYEES E2 ON E1.DEPARTMENT_ID = E2.DEPARTMENT_ID AND E1.EMPLOYEE_ID <> E2.EMPLOYEE_ID;

3 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME, L.CITY, C.COUNTRY_NAME, R.REGION_NAME FROM EMPLOYEES E JOIN DEPARTMENTS D USING (DEPARTMENT_ID) JOIN LOCATIONS L USING (LOCATION_ID) JOIN COUNTRIES C USING (COUNTRY_ID) JOIN REGIONS R USING (REGION_ID);

4 DISPLAY DEPARTMENT_NAME , CITY
SELECT DEPARTMENT_NAME, CITY FROM DEPARTMENTS JOIN LOCATIONS USING (LOCATION_ID);

5 DISPLAY FIRST_NAME , JOB_ID , JOB_TITLE
SELECT FIRST_NAME, JOB_ID, JOB_TITLE FROM EMPLOYEES JOIN JOBS USING (JOB_ID);
 
6 DISPLAY DEPARTMENT_NAME , CITY, STATE_PROVINCE, COUNTRY_NAME
 SELECT DEPARTMENT_NAME, CITY, STATE_PROVINCE, COUNTRY_NAME
 FROM DEPARTMENTS
 JOIN LOCATIONS USING (LOCATION_ID)
 JOIN COUNTRIES USING (COUNTRY_ID);
 
7 DISPLAY FIRST_NAME , REGION_NAME
SELECT FIRST_NAME, REGION_NAME
FROM EMPLOYEES
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

8 DISPLAY DEPARTMENT_NAME , REGION_NAME
SELECT DEPARTMENT_NAME, REGION_NAME
FROM DEPARTMENTS
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

9 DISPLAY THOSE REGION_NAME IN WHICH NO LOCATION IS YET FIXED
SELECT R.REGION_NAME
FROM REGIONS R
LEFT JOIN COUNTRIES C USING (REGION_ID)
LEFT JOIN LOCATIONS L USING (COUNTRY_ID)
WHERE L.LOCATION_ID IS NULL;

10 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL
SELECT FIRST_NAME, SALARY, GRADE_LEVEL
FROM EMPLOYEES
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

11 DISPLAY FIRST_NAME , SALARY AND HIS/HER MANAGERIAL COLLEGUE NAME ,SALARY AND DIFFERENCE OF THEIR SALARY
SELECT E1.FIRST_NAME EMPLOYEE_NAME , E1.SALARY EMPLOYEE_SALARY , E2.FIRST_NAME COLLEAGUE_NAME , E2.SALARY COLLEAGUE_SALARY , E1.SALARY - E2.SALARY SALARY_DIFFERENCE
FROM EMPLOYEES E1
JOIN EMPLOYEES E2 ON E1.MANAGER_ID = E2.EMPLOYEE_ID;

12 DISPLAY ALL COMBINATIONS OF CITY AND COUNTRY_NAME
SELECT DISTINCT CITY, COUNTRY_NAME
FROM LOCATIONS
CROSS JOIN COUNTRIES;

13 DISPLAY ALL COMBINATIONS DEPARTMENT_NAME AND CITY
SELECT DISTINCT DEPARTMENT_NAME, CITY
FROM DEPARTMENTS
cross JOIN LOCATIONS;

14 DISPLAY FIRST_NAME , SALARY , GRADE_LEVEL
SELECT FIRST_NAME, SALARY, GRADE_LEVEL
FROM EMPLOYEES
JOIN JOB_GRADES ON SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL;

15 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY , COUNTRY_NAME
SELECT FIRST_NAME, DEPARTMENT_NAME, CITY, COUNTRY_NAME
FROM EMPLOYEES
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID);

16 DISPLAY EMPLOYEE_NAME AND HIS MANAGER_NAME
SELECT E1.FIRST_NAME EMPLOYEE_NAME, E2.FIRST_NAME MANAGER_NAME
FROM EMPLOYEES E1
JOIN EMPLOYEES E2 ON E1.MANAGER_ID = E2.EMPLOYEE_ID;

17 DISPLAY COUNTRY_NAME , DEPARTMENT_ANME , REGION_NAME , CITY
SELECT COUNTRY_NAME, DEPARTMENT_NAME, REGION_NAME, CITY
FROM COUNTRIES
JOIN LOCATIONS USING (COUNTRY_ID)
JOIN DEPARTMENTS USING (LOCATION_ID)
JOIN REGIONS USING (REGION_ID);

18 DISPLAY EMPLOYEE_NAME , SALARY AND HIS/HER MANAGER'S NAME AND SALARY
SELECT E.FIRST_NAME EMPLOYEE_NAME , E.SALARY , M.FIRST_NAME MANAGER_NAME , M.SALARY MANAGER_SALARY
FROM EMPLOYEES E JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

19 DISPLAY CITY , REGION_NAME
SELECT CITY, REGION_NAME
FROM LOCATIONS
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

20 DISPLAY EMPLOYEE NAME , JOB_TITLE AND HIS/HER MANAGER'S NAME AND JOB_TITLE
SELECT E.FIRST_NAME EMP_NAME, J1.JOB_TITLE,M.FIRST_NAME AS MGR_NAME, J2.JOB_TITLE AS MGR_JOB_TITLE
FROM EMPLOYEES E
JOIN JOBS J1 ON E.JOB_ID = J1.JOB_ID
JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
JOIN JOBS J2 ON M.JOB_ID = J2.JOB_ID;

21 DISPLAY FIRST_NAME WHOSE DEPARTMENT_ID IS NOT FIXED YET
SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID IS NULL;

22 DISPLAY DEPARTMENT_NAME , REGION_NAME
SELECT DEPARTMENT_NAME, REGION_NAME
FROM DEPARTMENTS
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

23 DISPLAY FIRST_NAME , JOB_TITLE , SALARY , GRADE_LEVEL , DEPARTMENT_NAME , CITY , COUNTRY_NAME , REGION_NAME
SELECT FIRST_NAME, JOB_TITLE, E.SALARY, GRADE_LEVEL, DEPARTMENT_NAME, CITY, COUNTRY_NAME, REGION_NAME
FROM EMPLOYEES E
JOIN JOBS USING (JOB_ID)
JOIN JOB_GRADES G ON E.SALARY BETWEEN G.LOWEST_SAL AND G.HIGHEST_SAL
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID)
JOIN COUNTRIES USING (COUNTRY_ID)
JOIN REGIONS USING (REGION_ID);

24 DISPLAY THOSE WHO GETS HIGHER SALARY THAN 'Abel'
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Abel');

25 DISPLAY FIRST_NAME , COUNTRY_NAME
SELECT E.FIRST_NAME, C.COUNTRY_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID;

26 DISPLAY THOSE WHO WERE HIRED BEFORE 'Hartstein'
SELECT FIRST_NAME, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE LAST_NAME = 'Hartstein');

27 DISPLAY FIRST_NAME , DEPARTMENT_NAME , CITY
SELECT FIRST_NAME, DEPARTMENT_NAME, CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID;

28 DISPLAY EMPLOYEE_NAME , SALARY , GRADE_LEVEL AND HIS/HER MANAGER'S NAME , SALARY , GRADE_LEVEL
SELECT E.FIRST_NAME EMP_NAME, E.SALARY EMP_SALARY, G1.GRADE_LEVEL EMP_GRADE_LEVEL,M.FIRST_NAME MGR_NAME, M.SALARY MGR_SALARY, G2.GRADE_LEVEL MGR_GRADE_LEVEL
FROM EMPLOYEES E
JOIN JOB_GRADES G1 ON E.SALARY BETWEEN G1.LOWEST_SAL AND G1.HIGHEST_SAL
JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
JOIN JOB_GRADES G2 ON M.SALARY BETWEEN G2.LOWEST_SAL AND G2.HIGHEST_SAL;

29 DISPLAY DEPARTMENT_NAME IN WHICH NO ONE IS HIRED
SELECT DEPARTMENT_NAME
FROM DEPARTMENTS
LEFT JOIN EMPLOYEES USING(DEPARTMENT_ID)
WHERE EMPLOYEE_ID IS NULL;

30 DISPLAY FIRST_NAME , CITY
SELECT FIRST_NAME, CITY
FROM EMPLOYEES
JOIN DEPARTMENTS USING (DEPARTMENT_ID)
JOIN LOCATIONS USING (LOCATION_ID);
