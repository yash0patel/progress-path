CREATE TABLE L1 AS SELECT * FROM LOCATIONS WHERE 1 = 2;

1 INSERT TWO ROWS TO R1 TABLE. (USE LITERAL VALUES)
INSERT INTO R1 VALUES (123,'ASIA');

2 INSERT TWO ROWS TO D1 TABLE. SUPPLY VALUES ONLY FOR NOT NULL COLUMNS. (USE SUBSTITUTION VARIABLES)
 INSERT INTO D1(DEPARTMENT_NAME) VALUES ('&DNAME');
 
3 INSERT TWO ROWS TO L1 TABLE. SUPPLY VALUES FOR ALL COLUMNS, BUT KEEP NULL FOR COLUMNS WHICH ALLOWS NULL.
 INSERT INTO L1 VALUES (1501,NULL,NULL,'HMT',NULL,NULL);
 
4 INSERT ALL ROWS OF R1 TABLE INTO SAME TABLE, USING SINGLE COMMAND.
INSERT INTO R1 VALUE SELECT * FROM R1;
 
5 INSERT TWO ROWS TO C1 TABLE, USE DEFAULT KEY WORD.
INSERT INTO C1 

6 CREATE SAVEPOINT NAMED FIRST.
SAVEPOINT FIRST;

7 INSERT TWO ROWS TO C1 TABLE, USE SUB QUERY TO GET VALUE FOR REGION_ID COLUMN.
INSERT INTO C1 SELECT * FROM REGIONS FETCH NEXT 2 ROWS ONLY;

8 INSERT IN R1 TABLE FROM REGIONS TABLE USING SUB QUERY. IT SHOULD INSERT ALL ROWS WHERE REGION_ID IS HIGHER THAN 2.
INSERT INTO C1 SELECT * FROM REGIONS WHERE REGION_ID > 2;

9 INSERT INTO D1 TABLE FROM DEPARTMENTS TABLE FOR ONLY DEPARTMENT_NAME AND LOCATION_ID COLUMNS. IT SHOULD INSERT ALL ROWS OF DEPARTMENTS WHERE DEPARTMENT_ID IS LOWER THAN 80.
INSERT INTO D1(DEPARTMENT_NAME , LOCATION_ID) SELECT DEPARTMENT_NAME , LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID < 80;

8 UPDATE ALL DEPARTMENT_NAME TO UPPER LATTERS.
UPDATE D1 SET DEPARTMENT_NAME = UPPER(DEPARTMENT_NAME);

9 UPDATE SALARY WITH 20% INCREMENT FOR EMPLOYEES WHO WORKS IN 50,90,110 DEPARTMENTS.
UPDATE EMPLOYEES SET SALARY = (SALARY*0.2)+SALARY WHERE DEPARTMENT_ID IN (50,90,110);

10 CREATE SAVEPOINT NAMED SECOND.
SAVEPOINT SECOND;

11 UPDATE SALARY WITH 1500 INCREMENT FOR EMPLOYEES WHO WORKS IN Sales DEPARTMENT.
UPDATE EMPLOYEES SET SALARY = 1500+SALARY WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Sales');

12 UPDATE SALARY WITH 500 AND COMMISSION_PCT WITH .05 FOR EMPLOYEES WHO WORKS AS SA_REP , IT_PROG.
UPDATE EMPLOYEES SET SALARY = SALARY+500 , COMMISSION_PCT = COMMISSION_PCT+0.05 WHERE JOB_ID IN ('SA_REP' , 'IT_PROG');

13 DELETE ALL ROWS OF REGIONS TABLE HAVING REGION_ID HIGHER THAN 4.
DELETE FROM REGIONS WHERE REGION_ID > 4;

14 CREATE SAVEPOINT NAMED THIRD.
SAVEPOINT THIRD;

15 DELETE ALL ROWS OF DEPARTMENTS TABLE HAVING DEPARTMENT_ID HIGHER THAN 190.
DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID > 190;

16 DELETE ALL ROWS OF EMPLOYEES TABLE WHO WORKS IN Marketing DEPARTMENT.
DELETE FROM EMPLOYEES WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Marketing');

17 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED THIRD.
ROLLBACK TO SAVEPOINT THIRD;

18 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED FIRST.
ROLLBACK TO SAVEPOINT FIRST;

19 SAVE ALL REMAINING CHANGES.
COMMIT;
